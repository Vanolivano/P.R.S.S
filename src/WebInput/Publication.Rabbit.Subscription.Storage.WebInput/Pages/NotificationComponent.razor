@using Microsoft.AspNetCore.SignalR.Client
@using Publication.Rabbit.Subscription.Storage.WebInput
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Notification</PageTitle>
<h2>NOTIFICATIONS:</h2>
<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri(Constants.NotificationHubRelativeUri))
        .Build();

        hubConnection.On<string>(Constants.ReceiveMessage, (message) =>
        {
            messages.Add(message);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
